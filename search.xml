<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java每日一考12</title>
      <link href="/2020/10/12/javatest12/"/>
      <url>/2020/10/12/javatest12/</url>
      
        <content type="html"><![CDATA[<h3 id="1、如何实现向下转型？需要注意什么问题？如何解决此问题？"><a href="#1、如何实现向下转型？需要注意什么问题？如何解决此问题？" class="headerlink" title="1、如何实现向下转型？需要注意什么问题？如何解决此问题？"></a>1、如何实现向下转型？需要注意什么问题？如何解决此问题？</h3><p>使用强转符</p><p>可能ClassCastException异常</p><p>使用instanceof在进行向下转型前判断</p><pre class=" language-lang-bash"><code class="language-lang-bash">if(p instanceof Man)&#123;&#125;</code></pre><p>p:变量名 Man:类</p><h3 id="2、-和equals-有何区别？"><a href="#2、-和equals-有何区别？" class="headerlink" title="2、==和equals()有何区别？"></a>2、==和equals()有何区别？</h3><p>==：既可以比较基本数据类型，也可以比较引用类型。对于基本类型，就是比较值，对于引用类型就是比较内存地址</p><p>equals: 只能比较引用数据类型，如果该方法没有被重写过，默认也是==，对类file、String、date及包装类来说，是比较类型及内容，因为重写了object类中equals()方法</p><h3 id="3、写出8种基本数据类型及其对应的包装类"><a href="#3、写出8种基本数据类型及其对应的包装类" class="headerlink" title="3、写出8种基本数据类型及其对应的包装类"></a>3、写出8种基本数据类型及其对应的包装类</h3><style>table {margin: auto;}</style><div class="table-container"><table><thead><tr><th style="text-align:center">基本数据类型</th><th style="text-align:center">包装类</th></tr></thead><tbody><tr><td style="text-align:center"> byte</td><td style="text-align:center">Byte</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">Short</td></tr><tr><td style="text-align:center">int</td><td style="text-align:center">Integer</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">Long</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">Float</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">Double</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center">Boolean</td></tr><tr><td style="text-align:center">char</td><td style="text-align:center">Character</td></tr></tbody></table></div><h3 id="4、基本数据类型、包装类与String三者之间如何转换"><a href="#4、基本数据类型、包装类与String三者之间如何转换" class="headerlink" title="4、基本数据类型、包装类与String三者之间如何转换"></a>4、基本数据类型、包装类与String三者之间如何转换</h3><p><img src="Image.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java每日一考11</title>
      <link href="/2020/10/08/javatest11/"/>
      <url>/2020/10/08/javatest11/</url>
      
        <content type="html"><![CDATA[<h3 id="1、什么是多态性？什么是虚拟方法调用？"><a href="#1、什么是多态性？什么是虚拟方法调用？" class="headerlink" title="1、什么是多态性？什么是虚拟方法调用？"></a>1、什么是多态性？什么是虚拟方法调用？</h3><p><strong>多态性</strong>：父类的引用指向子类的对象</p><pre class=" language-lang-bash"><code class="language-lang-bash">Person p = new Man();p.eat();</code></pre><p><strong>虚拟方法调用</strong>：调用方法时，编译看左边，运行看右边</p><h3 id="2、一个类可以有几个父类？一个父类可有多少个子类？子类能获取直接父类的父类中的结构吗？子类能否获取父类中private权限的属性或方法？"><a href="#2、一个类可以有几个父类？一个父类可有多少个子类？子类能获取直接父类的父类中的结构吗？子类能否获取父类中private权限的属性或方法？" class="headerlink" title="2、一个类可以有几个父类？一个父类可有多少个子类？子类能获取直接父类的父类中的结构吗？子类能否获取父类中private权限的属性或方法？"></a>2、一个类可以有几个父类？一个父类可有多少个子类？子类能获取直接父类的父类中的结构吗？子类能否获取父类中private权限的属性或方法？</h3><p>一个类有一个直接父类，可以有多个间接父类。</p><p>一个父类可有多个子类。</p><p>子类能获取直接父类的父类中的结构。</p><p>子类能获取父类中private权限的属性或方法，只是不可见而已。</p><h3 id="3、方法的重写的具体规则有哪些？"><a href="#3、方法的重写的具体规则有哪些？" class="headerlink" title="3、方法的重写的具体规则有哪些？"></a>3、方法的重写的具体规则有哪些？</h3><p>①子类重写的方法必须和父类被重写的方法具有相同的方法名称、参数列表</p><p>②子类重写的方法的返回值类型不能大于父类被重写的方法的返回值类型</p><p>③子类重写的方法使用的访问权限不能小于父类被重写的方法的访问权限</p><p>子类不能重写父类中声明为private权限的方法</p><p>④子类方法抛出的异常不能大于父类被重写方法的异常</p><h3 id="4、super调用构造器，有哪些具体的注意点？"><a href="#4、super调用构造器，有哪些具体的注意点？" class="headerlink" title="4、super调用构造器，有哪些具体的注意点？"></a>4、super调用构造器，有哪些具体的注意点？</h3><p>this(形参列表)：本类重载的其它构造器</p><p>super(形参列表)：调用父类中指定的构造器</p><p><strong>注意点：</strong></p><p>①当子父类出现同名成员时，可以用super表明调用的是父类中的成员</p><p>②super的追溯不仅限于直接父类</p><p>③子类中所有的构造器默认都会访问父类中空参数的构造器</p><p>④当父类中没有空参数的构造器时，子类的构造器必须通过this(参数列表)或者super(参数列表)语句指定调用本类或者父类中相应的构造器。同时，只能二选一，且放在构造器的首行</p><p>⑤如果子类构造器中既未显示调用父类或本类的构造器，且父类中又没有无参的构造器，则编译出错。</p>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java每日一考10</title>
      <link href="/2020/10/03/javatest10/"/>
      <url>/2020/10/03/javatest10/</url>
      
        <content type="html"><![CDATA[<h3 id="1、构造器的作用是什么？使用过程中有哪些注意点？"><a href="#1、构造器的作用是什么？使用过程中有哪些注意点？" class="headerlink" title="1、构造器的作用是什么？使用过程中有哪些注意点？"></a>1、构造器的作用是什么？使用过程中有哪些注意点？</h3><p><strong>作用</strong>：</p><p>①创建对象<br>②给对象进行初始化</p><p><strong>注意点</strong>：</p><p>①具有与类相同的名称</p><p>②一个类中一定有构造器</p><p>③不声明返回值</p><p>④不能被static、final、synchronized、abstract、native修饰，不能有return语句返回值</p><h3 id="2、关于类的属性的赋值，有几种赋值的方式，谈谈赋值的先后顺序"><a href="#2、关于类的属性的赋值，有几种赋值的方式，谈谈赋值的先后顺序" class="headerlink" title="2、关于类的属性的赋值，有几种赋值的方式，谈谈赋值的先后顺序"></a>2、关于类的属性的赋值，有几种赋值的方式，谈谈赋值的先后顺序</h3><p><strong>赋值方式</strong>：</p><p>①默认初始化</p><p>②显示初始化</p><p>③构造器中初始化</p><p>④通过”对象.属性”或”对象.方法”的方式赋值</p><p><strong>赋值先后顺序</strong>：①-②-③-④</p><h3 id="3、this关键字可以调用哪些结构，简要说明一下使用"><a href="#3、this关键字可以调用哪些结构，简要说明一下使用" class="headerlink" title="3、this关键字可以调用哪些结构，简要说明一下使用"></a>3、this关键字可以调用哪些结构，简要说明一下使用</h3><p>this可以调用类的属性、方法和构造器</p><p>调用属性：this.name = name;</p><p>调用方法：this.eat();</p><p>调用同一类中无参构造器：this();</p><p>调用同一类中重载的其他构造器：this(形参列表)</p><h3 id="4、Java中目前学习涉及到的四种权限修饰符有哪些？并说明各自的权限范围"><a href="#4、Java中目前学习涉及到的四种权限修饰符有哪些？并说明各自的权限范围" class="headerlink" title="4、Java中目前学习涉及到的四种权限修饰符有哪些？并说明各自的权限范围"></a>4、Java中目前学习涉及到的四种权限修饰符有哪些？并说明各自的权限范围</h3><p><strong>四种权限修饰符</strong>：public、protected、缺省、private</p><div class="table-container"><table><thead><tr><th style="text-align:center">修饰符</th><th style="text-align:center">类内部</th><th style="text-align:center">同一个包</th><th style="text-align:center">不同包的子类</th><th style="text-align:center">同一个工程</th></tr></thead><tbody><tr><td style="text-align:center"> private</td><td style="text-align:center">yes</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">缺省</td><td style="text-align:center">yes</td><td style="text-align:center">yes</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">protected</td><td style="text-align:center">yes</td><td style="text-align:center">yes</td><td style="text-align:center">yes</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">public</td><td style="text-align:center">yes</td><td style="text-align:center">yes</td><td style="text-align:center">yes</td><td style="text-align:center">yes </td></tr></tbody></table></div><h3 id="5、创建Circle类，提供私有的radius属性，提供相应的get和set方法，提供求圆面积的方法"><a href="#5、创建Circle类，提供私有的radius属性，提供相应的get和set方法，提供求圆面积的方法" class="headerlink" title="5、创建Circle类，提供私有的radius属性，提供相应的get和set方法，提供求圆面积的方法"></a>5、创建Circle类，提供私有的radius属性，提供相应的get和set方法，提供求圆面积的方法</h3><p><strong>Circle类中</strong></p><pre class=" language-lang-bash"><code class="language-lang-bash">package xiao.wang.java;public class Circle &#123;    //属性    private double radius;//半径    //方法    //设置圆半径    public void setRadius(double radius) &#123;        this.radius = radius;    &#125;    //获取圆半径的值    public double getRadius() &#123;        return radius;    &#125;    //求圆面积    public double area(double i) &#123;        double area = Math.PI * i * i;        return area;    &#125;&#125;</code></pre><p><strong>CircleTest类中</strong></p><pre class=" language-lang-bash"><code class="language-lang-bash">package xiao.wang.java;public class CircleTest &#123;    public static void main(String[] args) &#123;        //创建对象        Circle c = new Circle();        //调用方法        //设置圆的半径        c.setRadius(2);        System.out.println("圆的半径为：" + c.getRadius());        System.out.println("圆的面积为：" + c.area(c.getRadius()));    &#125;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java每日一考9</title>
      <link href="/2020/09/29/javatest9/"/>
      <url>/2020/09/29/javatest9/</url>
      
        <content type="html"><![CDATA[<h3 id="1、什么是方法的重载"><a href="#1、什么是方法的重载" class="headerlink" title="1、什么是方法的重载"></a>1、什么是方法的重载</h3><p>在同一个类中，允许存在一个以上的同名方法，只要他们的参数个数或参数类型不同即可。</p><p> <strong>两同一不同</strong>：同一个类，同一个方法，参数列表不同</p><h3 id="2、说明Java方法中的参数传递机制的具体体现"><a href="#2、说明Java方法中的参数传递机制的具体体现" class="headerlink" title="2、说明Java方法中的参数传递机制的具体体现"></a>2、说明Java方法中的参数传递机制的具体体现</h3><p>形参：方法声明时的参数</p><p>实参：方法调用时实际传给形参的参数值</p><p>形参是<strong>基本数据类型</strong>：将实参基本数据类型变量的<strong>数据值</strong>传递给形参</p><p>形参是<strong>引用数据类型</strong>：将实参引用数据类型变量的<strong>地址值</strong>（含变量数据类型）传递给实参</p><h3 id="3、成员变量（属性）和局部变量在声明的位置上、是否有默认初始化值，是否有权限修饰符修饰，内存分配的位置上有何不同"><a href="#3、成员变量（属性）和局部变量在声明的位置上、是否有默认初始化值，是否有权限修饰符修饰，内存分配的位置上有何不同" class="headerlink" title="3、成员变量（属性）和局部变量在声明的位置上、是否有默认初始化值，是否有权限修饰符修饰，内存分配的位置上有何不同"></a>3、成员变量（属性）和局部变量在声明的位置上、是否有默认初始化值，是否有权限修饰符修饰，内存分配的位置上有何不同</h3><div class="table-container"><table><thead><tr><th style="text-align:center">区别</th><th style="text-align:center">成员变量</th><th style="text-align:center">局部变量  </th></tr></thead><tbody><tr><td style="text-align:center"> 声明的位置</td><td style="text-align:center">直接声明在类中</td><td style="text-align:center">方法形参或内部、代码块内、构造器内 </td></tr><tr><td style="text-align:center">修饰符</td><td style="text-align:center">private、public、static、final等</td><td style="text-align:center">不能用权限修饰符修饰，可以用final修饰 </td></tr><tr><td style="text-align:center">初始化值</td><td style="text-align:center">有默认初始化值</td><td style="text-align:center">没有默认初始化值 </td></tr><tr><td style="text-align:center">内存加载位置</td><td style="text-align:center">堆空间或静态域内</td><td style="text-align:center">栈空间 </td></tr></tbody></table></div><h3 id="4、谈谈return关键字的使用"><a href="#4、谈谈return关键字的使用" class="headerlink" title="4、谈谈return关键字的使用"></a>4、谈谈return关键字的使用</h3><p>①结束方法</p><p>②针对于有返回值的方法：return+返回值</p>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java每日一考8</title>
      <link href="/2020/09/27/javatest8/"/>
      <url>/2020/09/27/javatest8/</url>
      
        <content type="html"><![CDATA[<h3 id="1、面向对象思想编程内容的三条主线分别是什么？"><a href="#1、面向对象思想编程内容的三条主线分别是什么？" class="headerlink" title="1、面向对象思想编程内容的三条主线分别是什么？"></a>1、面向对象思想编程内容的三条主线分别是什么？</h3><p>①类及类的成员：属性、方法、构造器；代码块、内部类</p><p>②面向对象三大特征：封装性、继承性、多态性</p><p>③其它关键字：this,super,abstract,interface,static,final,package,import</p><h3 id="2、谈谈你对面向对象中类和对象的理解，并指出二者的关系"><a href="#2、谈谈你对面向对象中类和对象的理解，并指出二者的关系" class="headerlink" title="2、谈谈你对面向对象中类和对象的理解，并指出二者的关系"></a>2、谈谈你对面向对象中类和对象的理解，并指出二者的关系</h3><p>类是对一类事物的描述，是抽象的、概念上的定义</p><p>对象是实际存在的该类事物的每个个体，因而也称为实例</p><p>对象是类的实例化</p><h3 id="3、类和对象的创建和执行操作有那三步？"><a href="#3、类和对象的创建和执行操作有那三步？" class="headerlink" title="3、类和对象的创建和执行操作有那三步？"></a>3、类和对象的创建和执行操作有那三步？</h3><p>①创建类</p><p>②类的实例化</p><p>③调用对象的结构：”对象.属性”，”对象.方法”</p><h3 id="4、类的方法内是否可以定义变量？是否可以调用属性？是否可以定义方法？是否可以调用方法？"><a href="#4、类的方法内是否可以定义变量？是否可以调用属性？是否可以定义方法？是否可以调用方法？" class="headerlink" title="4、类的方法内是否可以定义变量？是否可以调用属性？是否可以定义方法？是否可以调用方法？"></a>4、类的方法内是否可以定义变量？是否可以调用属性？是否可以定义方法？是否可以调用方法？</h3><p>是，是，否，是</p>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java每日一考7</title>
      <link href="/2020/09/24/javatest7/"/>
      <url>/2020/09/24/javatest7/</url>
      
        <content type="html"><![CDATA[<h3 id="1、使用冒泡排序，实现如下的数组从小到大排序"><a href="#1、使用冒泡排序，实现如下的数组从小到大排序" class="headerlink" title="1、使用冒泡排序，实现如下的数组从小到大排序"></a>1、使用冒泡排序，实现如下的数组从小到大排序</h3><p><strong>int[] arr = new int[] {34,5,22,-98,6,-76,0,-3};</strong></p><pre class=" language-lang-bash"><code class="language-lang-bash">package xiao.wang.java;public class BubbleSort2 &#123;    public static void main(String[] args) &#123;        //使用冒泡排序，实现如下的数组从小到大排序        //int[] arr = new int[] &#123;34,5,22,-98,6,-76,0,-3&#125;;        int[] arr = new int[] &#123;34,5,22,-98,6,-76,0,-3&#125;;        for(int i = 0;i < arr.length ;i++) &#123;            for(int j = 0;j < arr.length - i - 1;j++) &#123;                if(arr[j] > arr[j+1]) &#123;                    int temp = arr[j];                    arr[j] = arr[j + 1];                    arr[j + 1] = temp;                &#125;            &#125;        &#125;        //遍历输出        for(int i = 0;i < arr.length;i++) &#123;            System.out.print(arr[i] + "   ");        &#125;    &#125;&#125;</code></pre><h3 id="2、如何反转上面的数组，请代码实现"><a href="#2、如何反转上面的数组，请代码实现" class="headerlink" title="2、如何反转上面的数组，请代码实现"></a>2、如何反转上面的数组，请代码实现</h3><p><strong>int[] arr = new int[] {34,5,22,-98,6,-76,0,-3};</strong></p><pre class=" language-lang-bash"><code class="language-lang-bash">package xiao.wang.java;public class Reverse2 &#123;    public static void main(String[] args) &#123;        //反转下面的数组        //int[] arr = new int[] &#123;34,5,22,-98,6,-76,0,-3&#125;;        int[] arr = new int[] &#123;34,5,22,-98,6,-76,0,-3&#125;;        for(int i = 0;i < arr.length/2;i++) &#123;            int temp = arr[i];            arr[i] = arr[arr.length - i - 1];            arr[arr.length - i - 1] = temp;        &#125;        //遍历输出        for(int i = 0;i < arr.length;i++) &#123;            System.out.print(arr[i] + "   ");        &#125;    &#125;&#125;</code></pre><h3 id="3、复制上述数组，得到一个新的数组"><a href="#3、复制上述数组，得到一个新的数组" class="headerlink" title="3、复制上述数组，得到一个新的数组"></a>3、复制上述数组，得到一个新的数组</h3><p><strong>int[] arr = new int[] {34,5,22,-98,6,-76,0,-3};</strong></p><pre class=" language-lang-bash"><code class="language-lang-bash">package xiao.wang.java;public class Copy3 &#123;    public static void main(String[] args) &#123;        //复制上述数组，得到一个新的数组        //int[] arr1 = new int[] &#123;34,5,22,-98,6,-76,0,-3&#125;;        int[] arr1 = new int[] &#123;34,5,22,-98,6,-76,0,-3&#125;;        int[] arr2 = new int[arr1.length];        for(int i = 0;i < arr1.length;i++) &#123;            arr2[i] = arr1[i];        &#125;        //遍历输出        for(int i = 0;i < arr2.length;i++) &#123;            System.out.print(arr2[i] + "   ");        &#125;        //换行        System.out.println();        //输出两个数组地址,验证是复制，有两个地址        System.out.println(arr1);        System.out.println(arr2);    &#125;</code></pre><h3 id="4、使用线性查找，从上述数组中查找22是否存在，存在，返回所在位置索引，不存在，输出提示信息"><a href="#4、使用线性查找，从上述数组中查找22是否存在，存在，返回所在位置索引，不存在，输出提示信息" class="headerlink" title="4、使用线性查找，从上述数组中查找22是否存在，存在，返回所在位置索引，不存在，输出提示信息"></a>4、使用线性查找，从上述数组中查找22是否存在，存在，返回所在位置索引，不存在，输出提示信息</h3><pre class=" language-lang-bash"><code class="language-lang-bash">/* * 使用线性查找，从上述数组中查找22是否存在， * 存在，返回所在位置索引，不存在，输出提示信息 * int[] arr = new int[] &#123;34,5,22,-98,6,-76,0,-3&#125;; */package xiao.wang.java;public class LineFind &#123;    public static void main(String[] args) &#123;        int[] arr = new int[] &#123;34,5,22,-98,6,-76,0,-3&#125;;        //要查找的数        int dest = 22;        //立一个标志，查找到，变为false，没找到，为true        boolean isFind = true;        for(int i = 0;i < arr.length;i++) &#123;            if(arr[i] == dest) &#123;                System.out.println("查找到了，位置为" + i);                isFind = false;                break;            &#125;        &#125;        if(isFind) &#123;            System.out.println("很遗憾，没有找到");        &#125;    &#125;&#125;</code></pre><h3 id="5、数组中常见的异常有哪些？"><a href="#5、数组中常见的异常有哪些？" class="headerlink" title="5、数组中常见的异常有哪些？"></a>5、数组中常见的异常有哪些？</h3><p><strong>①数组角标越界异常</strong></p><pre class=" language-lang-bash"><code class="language-lang-bash">int[] arr = new int[2];System.out.println(arr[2]);System.out.println(arr[-1]);</code></pre><p>访问到了数组中不存在的角标时发生</p><p><strong>②空指针异常</strong></p><pre class=" language-lang-bash"><code class="language-lang-bash">int[] arr = null;System.out.println(arr[0]);</code></pre><p>arr引用没有指向实体，却在操作实体中的元素</p>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java每日一考6</title>
      <link href="/2020/09/20/javatest6/"/>
      <url>/2020/09/20/javatest6/</url>
      
        <content type="html"><![CDATA[<h3 id="1、写出一维数组初始化的两种方式："><a href="#1、写出一维数组初始化的两种方式：" class="headerlink" title="1、写出一维数组初始化的两种方式："></a>1、写出一维数组初始化的两种方式：</h3><p>①动态初始化：<strong>数组声明且为数组元素分配空间</strong>与<strong>赋值操作</strong>分开进行</p><pre class=" language-lang-bash"><code class="language-lang-bash">int[] arr = new int[3];arr[0] = 3;arr[1] = 5;arr[2] = 8;</code></pre><p>②静态初始化：在定义数组的同时，就为数组元素分配空间并赋值。</p><pre class=" language-lang-bash"><code class="language-lang-bash">int[] arr = new int[]&#123;2,5,8&#125;;</code></pre><h3 id="2、不同类型的一维数组元素的默认初始化值各是多少？"><a href="#2、不同类型的一维数组元素的默认初始化值各是多少？" class="headerlink" title="2、不同类型的一维数组元素的默认初始化值各是多少？"></a>2、不同类型的一维数组元素的默认初始化值各是多少？</h3><div class="table-container"><table><thead><tr><th style="text-align:center">数组元素类型</th><th style="text-align:center">默认初始化值</th></tr></thead><tbody><tr><td style="text-align:center">byte</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">int</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">0L</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">0.0</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">0.0</td></tr><tr><td style="text-align:center">char</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">引用数据类型</td><td style="text-align:center">null</td></tr></tbody></table></div><h3 id="3、一维数组内存解析："><a href="#3、一维数组内存解析：" class="headerlink" title="3、一维数组内存解析："></a>3、一维数组内存解析：</h3><p><strong>String[] strs = new String[5];</strong></p><p><strong>Strs[2] = “Tom”;</strong></p><p><strong>Strs = new String[3];</strong></p><p><img src="interStore.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java每日一考5</title>
      <link href="/2020/09/18/javatest5/"/>
      <url>/2020/09/18/javatest5/</url>
      
        <content type="html"><![CDATA[<h3 id="1、循环结构是如何最后退出循环的，有哪些不同的情况请说明。"><a href="#1、循环结构是如何最后退出循环的，有哪些不同的情况请说明。" class="headerlink" title="1、循环结构是如何最后退出循环的，有哪些不同的情况请说明。"></a>1、循环结构是如何最后退出循环的，有哪些不同的情况请说明。</h3><p>① 循环条件返回false</p><p>② 在循环体内，遇到break,退出循环</p><h3 id="2、一个数如果恰好等于它的因子之和，这个数就称为”完数”。例如6-1＋2＋3。编程-找出1000以内的所有完数。（因子：除去这个数本身的其它约数）"><a href="#2、一个数如果恰好等于它的因子之和，这个数就称为”完数”。例如6-1＋2＋3。编程-找出1000以内的所有完数。（因子：除去这个数本身的其它约数）" class="headerlink" title="2、一个数如果恰好等于它的因子之和，这个数就称为”完数”。例如6=1＋2＋3。编程 找出1000以内的所有完数。（因子：除去这个数本身的其它约数）"></a>2、一个数如果恰好等于它的因子之和，这个数就称为”完数”。例如6=1＋2＋3。编程 找出1000以内的所有完数。（因子：除去这个数本身的其它约数）</h3><pre class=" language-lang-bash"><code class="language-lang-bash">class WanNum&#123;    public static void main(String[] args)    &#123;        int addNum = 0;        System.out.println("1000以内所有完数为：");        for (int i = 2;i <= 1000 ;i++ )        &#123;            for (int j = 1;j < i ;j++ )            &#123;                if (i % j == 0)                &#123;                    addNum += j;                &#125;            &#125;            if (addNum == i)                &#123;                    System.out.println(i);                &#125;            addNum = 0;        &#125;    &#125;&#125;</code></pre><h3 id="3、说明break和continue使用上的相同点和不同点"><a href="#3、说明break和continue使用上的相同点和不同点" class="headerlink" title="3、说明break和continue使用上的相同点和不同点"></a>3、说明break和continue使用上的相同点和不同点</h3><p>break:能用在switch-case和循环结构中（结束当前循环），其后不能声明其他执行语句</p><p>continue：只能用在循环结构中（结束当次循环），其后不能声明其他执行语句</p><h3 id="4、从控制台输出如下结构："><a href="#4、从控制台输出如下结构：" class="headerlink" title="4、从控制台输出如下结构："></a>4、从控制台输出如下结构：</h3><p>******</p><p>*****</p><p>**** </p><p>***</p><p>**  </p><p>*    </p><pre class=" language-lang-bash"><code class="language-lang-bash">class SubStar&#123;    public static void main(String[] args)    &#123;        for (int i = 1;i <= 6 ;i++ )        &#123;            for (int j = 6;j >=i ;j-- )            &#123;                System.out.print("*");            &#125;            System.out.println();        &#125;    &#125;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java每日一考4</title>
      <link href="/2020/09/15/javatest4/"/>
      <url>/2020/09/15/javatest4/</url>
      
        <content type="html"><![CDATA[<h3 id="1、switch后面使用的表达式可以是哪些数据类型的？"><a href="#1、switch后面使用的表达式可以是哪些数据类型的？" class="headerlink" title="1、switch后面使用的表达式可以是哪些数据类型的？"></a>1、switch后面使用的表达式可以是哪些数据类型的？</h3><p>byte、short、char、int、枚举（jdk 5.0）、string（jdk 7.0）</p><h3 id="2、谈谈你对三元运算符、if-else和switch-case结构使用场景的理解"><a href="#2、谈谈你对三元运算符、if-else和switch-case结构使用场景的理解" class="headerlink" title="2、谈谈你对三元运算符、if-else和switch-case结构使用场景的理解"></a>2、谈谈你对三元运算符、if-else和switch-case结构使用场景的理解</h3><p>能用三元运算符和switch-case的场景，一定能用if-else<br>能用if-else的场景，不一定能用三元运算符和switch-case<br>若三者都能用的场景，用三元运算符或switch-case,执行效率高。</p><h3 id="3、如何从控制台获取String和int型的变量，并输出？"><a href="#3、如何从控制台获取String和int型的变量，并输出？" class="headerlink" title="3、如何从控制台获取String和int型的变量，并输出？"></a>3、如何从控制台获取String和int型的变量，并输出？</h3><pre class=" language-lang-bash"><code class="language-lang-bash">import java.util.Scanner;</code></pre><pre class=" language-lang-bash"><code class="language-lang-bash">Scanner scan = new Scanner(System.in);</code></pre><pre class=" language-lang-bash"><code class="language-lang-bash">int number = scan.nextInt();string str = scan.next();</code></pre><h3 id="4、使用for循环遍历100以内的奇数，并计算所有奇数的和并输出"><a href="#4、使用for循环遍历100以内的奇数，并计算所有奇数的和并输出" class="headerlink" title="4、使用for循环遍历100以内的奇数，并计算所有奇数的和并输出"></a>4、使用for循环遍历100以内的奇数，并计算所有奇数的和并输出</h3><pre class=" language-lang-bash"><code class="language-lang-bash">class BianSum&#123;    public static void main(String[] args)    &#123;        int sum = 0;        for (int i = 1;i <101 ;i++ )        &#123;            if (i % 2 != 0)            &#123;                System.out.println(i);                sum += i;            &#125;        &#125;        System.out.println("100以内奇数的和为：" + sum);    &#125;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java每日一考3</title>
      <link href="/2020/09/15/javatest3/"/>
      <url>/2020/09/15/javatest3/</url>
      
        <content type="html"><![CDATA[<h3 id="1、-amp-和-amp-amp-的异同"><a href="#1、-amp-和-amp-amp-的异同" class="headerlink" title="1、&amp;和&amp;&amp;的异同"></a>1、&amp;和&amp;&amp;的异同</h3><p>相同：都是逻辑运算符，都是判断两边为真时，则语句成立<br>区别：&amp;&amp;当第一个条件不成立时，后边的条件都不执行了，而&amp;还是继续执行，直到整个条件语句执行完为止</p><h3 id="2、定义三个int型变量并赋值，使用三元运算符或if-else获取三个数中最大值"><a href="#2、定义三个int型变量并赋值，使用三元运算符或if-else获取三个数中最大值" class="headerlink" title="2、定义三个int型变量并赋值，使用三元运算符或if else获取三个数中最大值"></a>2、定义三个int型变量并赋值，使用三元运算符或if else获取三个数中最大值</h3><p><strong>三元运算符</strong></p><pre class=" language-lang-bash"><code class="language-lang-bash">class  ComMax&#123;    public static void main(String[] args)    &#123;        int x1 = 5;        int x2 =18;        int x3 = 3;        int max1 = (x1>x2)? x1 : x2;        int max2 = (max1>x3)? max1 : x3;        System.out.println("最大值为：" + max2);    &#125;&#125;</code></pre><p><strong>if else</strong></p><pre class=" language-lang-bash"><code class="language-lang-bash">class ComMax2&#123;    public static void main(String[] args)    &#123;        int x1 = 5;        int x2 =18;        int x3 = 3;        if(x1>x2 && x1>x3)        &#123;            System.out.println("最大值为:" + x1);        &#125;        else if(x2>x1 && x2>x3)        &#123;            System.out.println("最大值为" + x2);        &#125;        else if (x3>x1 && x3>x2)        &#123;            System.out.println("最大值为" + x3);        &#125;    &#125;&#125;</code></pre><h3 id="3、编写程序，声明两个double变量并赋值，判断第一个数大于10-0，且第二个数小于20-0，打印两数之和，否则，打印两数之积"><a href="#3、编写程序，声明两个double变量并赋值，判断第一个数大于10-0，且第二个数小于20-0，打印两数之和，否则，打印两数之积" class="headerlink" title="3、编写程序，声明两个double变量并赋值，判断第一个数大于10.0，且第二个数小于20.0，打印两数之和，否则，打印两数之积"></a>3、编写程序，声明两个double变量并赋值，判断第一个数大于10.0，且第二个数小于20.0，打印两数之和，否则，打印两数之积</h3><pre class=" language-lang-bash"><code class="language-lang-bash">class  Test3&#123;    public static void main(String[] args)    &#123;        double x1 = 10;        double x2 = 12;        double res = (x1>10 && x2<20)? x1+x2 : x1*x2;        System.out.println("打印结果为：" + res);    &#125;&#125;</code></pre><h3 id="4、交换两个变量值的代码实现"><a href="#4、交换两个变量值的代码实现" class="headerlink" title="4、交换两个变量值的代码实现"></a>4、交换两个变量值的代码实现</h3><pre class=" language-lang-bash"><code class="language-lang-bash">class Exchange&#123;    public static void main(String[] args)    &#123;        int x1 = 15;        int x2 = 20;        System.out.println("交换前x1为：" + x1 + "交换前x2为：" + x2);        int temp = x1;         x1 = x2;         x2 =temp;        System.out.println("交换后x1为：" + x1 + "交换后x2为：" + x2);    &#125;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java每日一考2</title>
      <link href="/2020/09/10/javatest2/"/>
      <url>/2020/09/10/javatest2/</url>
      
        <content type="html"><![CDATA[<h3 id="1、标识符命名规则："><a href="#1、标识符命名规则：" class="headerlink" title="1、标识符命名规则："></a>1、标识符命名规则：</h3><p>由26个英文字母大小写，0~9，_或$组成<br>不能以数字开头<br>不能使用关键字和保留字，但能包含关键字和保留字<br>不能有空格<br>java严格区分大小写，长度没有限制</p><h3 id="2、标识符的命名规范有哪些？"><a href="#2、标识符的命名规范有哪些？" class="headerlink" title="2、标识符的命名规范有哪些？"></a>2、标识符的命名规范有哪些？</h3><p>包名：多单词组成时，全用小写xxxyyyzzz<br>类名：多单词组成时，每个单词首字母大写XxxYyyZzz<br>变量名：多单词组成时，第一个单词小写，后边的单词首字母都大写xxxYyyZzz<br>常量：全部用大写，多个单词组成时，用下划线连接XXX_YYY_ZZZ</p><h3 id="3、java变量按照数据类型怎么划分？并指出java的基本数据类型有哪8种？并指出各自占用的内存空间大小"><a href="#3、java变量按照数据类型怎么划分？并指出java的基本数据类型有哪8种？并指出各自占用的内存空间大小" class="headerlink" title="3、java变量按照数据类型怎么划分？并指出java的基本数据类型有哪8种？并指出各自占用的内存空间大小"></a>3、java变量按照数据类型怎么划分？并指出java的基本数据类型有哪8种？并指出各自占用的内存空间大小</h3><p><img src="datatype.png" alt=""><br>基本数据类型：byte、short、char、int、long、float、double、boolean<br>byte: 1字节<br>short: 2字节<br>int: 4字节<br>long: 8字节<br>char: 2字节<br>float: 4字节<br>double: 8字节</p><h3 id="4、基本数据类型变量之间自动类型提升的运算规则"><a href="#4、基本数据类型变量之间自动类型提升的运算规则" class="headerlink" title="4、基本数据类型变量之间自动类型提升的运算规则"></a>4、基本数据类型变量之间自动类型提升的运算规则</h3><p><img src="transform.png" alt=""><br>有多种类型的数据混合运算时，系统首先自动将所有数据转化为容量最大的那种数据类型，然后进行计算<br>byte,short,char之间不会相互转换，在计算时先转换成int型<br>布尔类型不能与其他数据类型计算<br>当任何基本数据类型与字符串做连接运算时，基本数据类型会自动转化成字符串类型</p><h3 id="5、说明基本数据类型变量之间强制类型转换的使用规则和强转可能出现的问题"><a href="#5、说明基本数据类型变量之间强制类型转换的使用规则和强转可能出现的问题" class="headerlink" title="5、说明基本数据类型变量之间强制类型转换的使用规则和强转可能出现的问题"></a>5、说明基本数据类型变量之间强制类型转换的使用规则和强转可能出现的问题</h3><p>自动类型转换的逆过程，将容量大的数据类型转换为容量小的数据类型，必须使用强制转换符“（）”，可能降低精度或溢出<br>布尔类型不能转换为其他的数据类型</p>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java每日一考1</title>
      <link href="/2020/09/09/javatest/"/>
      <url>/2020/09/09/javatest/</url>
      
        <content type="html"><![CDATA[<h3 id="1、JDK、JRE、JVM三者之间关系，以及JDK、JRE包含的结构有哪些？"><a href="#1、JDK、JRE、JVM三者之间关系，以及JDK、JRE包含的结构有哪些？" class="headerlink" title="1、JDK、JRE、JVM三者之间关系，以及JDK、JRE包含的结构有哪些？"></a>1、JDK、JRE、JVM三者之间关系，以及JDK、JRE包含的结构有哪些？</h3><p>JDK：开发工具包（JRE+开发工具）<br>JRE：运行环境（JVM+核心类库）<br>JVM：虚拟机<br>实际的开发过程：我们利用JDK（调用java api）开发了我们的java程序，用JDK中javac命令将java文件编译成字节码文件，字节码文件在JRE上运行，JVM解析字节码</p><h3 id="2、为什么要配置path环境变量？如何配置？"><a href="#2、为什么要配置path环境变量？如何配置？" class="headerlink" title="2、为什么要配置path环境变量？如何配置？"></a>2、为什么要配置path环境变量？如何配置？</h3><p>（1）安装完软件后，在安装目录会出现一个“.exe”的文件，但是我们不可能记住每一个软件的安装位置<br>（2）在其他目录下想运行此软件也不行<br>所以需要配置环境变量，配置好后，会先在当前目录下寻找此程序，然后在path下寻找。<br><strong>如何配置</strong> ：把软件的安装路径放到path中</p><h3 id="3、常见的几个命令行操作有哪些？"><a href="#3、常见的几个命令行操作有哪些？" class="headerlink" title="3、常见的几个命令行操作有哪些？"></a>3、常见的几个命令行操作有哪些？</h3><p>javac 源文件名.java<br>java 类名<br>cd..<br>cd/<br>javadoc</p><h3 id="4、创建如下的类，使得运行可以输出："><a href="#4、创建如下的类，使得运行可以输出：" class="headerlink" title="4、创建如下的类，使得运行可以输出："></a>4、创建如下的类，使得运行可以输出：</h3><p>姓名：习大大</p><p>性别：男<br>家庭住址：北京中南海</p><p>(1)创建java文件：leader.java<br>(2)java文件中内容</p><pre class=" language-lang-bash"><code class="language-lang-bash">class leader&#123;    public static void main(String[] args)    &#123;        System.out.println("姓名：习大大");        System.out.println();        System.out.println("性别：男");        System.out.println("家庭住址：北京中南海");    &#125;&#125;</code></pre><h3 id="5、编译和运行上述代码的指令"><a href="#5、编译和运行上述代码的指令" class="headerlink" title="5、编译和运行上述代码的指令"></a>5、编译和运行上述代码的指令</h3><p>编译：</p><pre class=" language-lang-bash"><code class="language-lang-bash">javac leader.java</code></pre><p>运行：</p><pre class=" language-lang-bash"><code class="language-lang-bash">java leader</code></pre>]]></content>
      
      
      <categories>
          
          <category> java基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2020/08/20/hello-world/"/>
      <url>/2020/08/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="https://hexo.io/">Hexo</a>! 这是基于hexo搭建的博客. 点击这个 <a href="https://hexo.io/docs/">文档</a> 可以获取更多信息. 如果你在使用hexo过程中，遇到一些问题，你可以在 <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> 和 <a href="https://github.com/hexojs/hexo/issues">GitHub</a>寻找答案.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-lang-bash"><code class="language-lang-bash">$ hexo new "My New Post"</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-lang-bash"><code class="language-lang-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-lang-bash"><code class="language-lang-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-lang-bash"><code class="language-lang-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 第一篇博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> myblog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
